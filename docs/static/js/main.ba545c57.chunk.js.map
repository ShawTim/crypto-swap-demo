{"version":3,"sources":["components/CryptoBalances/index.module.scss","pages/ConnectWalletPage/index.module.scss","pages/SwapPage/index.module.scss","components/CryptoSwap/index.module.scss","features/cryptoPrice/slice.ts","features/cryptoPrice/api.ts","features/swapUI/slice.ts","features/wallet/api.ts","features/wallet/slice.ts","app/store.ts","app/hooks.ts","pages/ConnectWalletPage/metamask.svg","pages/ConnectWalletPage/index.tsx","components/CryptoBalances/index.tsx","components/CryptoSwap/CryptoSelectModal.tsx","components/CryptoSwap/CryptoSwapInitial.tsx","components/CryptoSwap/CryptoSwapApprove.tsx","components/CryptoSwap/index.tsx","pages/SwapPage/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SupportedCryptos","DEFAULT_PRICE_OBJECT","usd","btc","eth","getCoinGeckoPrices","a","vss","api","join","fetch","cache","response","json","priceData","USDC","WBTC","ETH","SwapStatus","CRYPTO_NAMES","CRYPTO_TXN_FEES","initialState","USD","getCoinGeckoPricesAsync","createAsyncThunk","cryptoPriceSlice","createSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","usd2usdc","numeral","divide","payload","value","usd2wbtc","multiply","initWallet","win","window","ethProvider","ethers","providers","Web3Provider","ethereum","signer","getSigner","getAddress","connectWallet","send","console","error","connectedAddress","undefined","balances","initWalletAsync","connectWalletAsync","walletSlice","doSwap","fromCrypto","fromAmount","toCrypto","toAmount","subtract","add","rejected","actions","status","INITIAL","swapUISlice","reset","setStatus","setFromCrypto","setFromAmount","setToCrypto","history","createBrowserHistory","basename","process","rootReducer","combineReducers","router","connectRouter","price","priceReducer","wallet","walletReducer","swapUI","swapUIReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","routerMiddleware","useAppDispatch","useDispatch","useAppSelector","useSelector","ConnectWalletPage","dispatch","onBtnClick","useCallback","to","className","styles","connectWalletPage","connectWalletText","connectWalletButton","onClick","icon","src","metamaskSVG","alt","text","spacer","BalanceListItem","props","cryptoListItem","cryptoNameContainer","cryptoIcon","crypto","cryptoName","cryptoNameTitle","cryptoNameDesc","cryptoBalanceContainer","cryptoBalance","cryptoValue","balance","format","cryptoAmount","rightArrow","onSelect","disabled","canSelect","CryptoBalances","prices","onSelectCrypto","selectUSDC","selectWBTC","selectETH","cryptoBalances","balanceContainer","balanceTitle","cryptoList","CryptoSelectListItem","useState","setCryptoValue","onClickListItem","useEffect","cryptoSelectListItem","cryptoSelectListItemCryptoContainer","cryptoSelectListItemCryptoIcon","cryptoSelectListItemCryptoNameContainer","cryptoSelectListItemCryptoName","cryptoSelectListItemCryptoDesc","cryptoSelectListItemBalanceContainer","cryptoSelectListItemValue","cryptoSelectListItemBalance","CryptoSelectModal","isOpen","cryptoSelectModal","modalOverlay","onClose","cryptoSelectModalBody","cryptoSelectModalTitle","title","upArrow","cryptoSelectList","onSelectListItem","CryptoSwapInitial","uiState","onChangeSwapStatus","onChangeFromCrypto","onChangeFromAmount","onChangeToCrypto","fromBalance","setFromBalance","toBalance","setToBalance","setToAmount","disableReview","setDisableReview","fromCryptoSelectOpen","setFromCryptoSelectOpen","toCryptoSelectOpen","setToCryptoSelectOpen","amount","onClickMaxButton","onClickReviewButton","REVIEW","onChangeFromAmountInput","ev","target","validity","patternMismatch","str","onSelectFromCrypto","onSelectToCrypto","openFromCryptoSelectModal","closeFromCryptoSelectModal","openToCryptoSelectModal","closeToCryptoSelectModal","swapBody","swapInnerBody","swapCryptoSelectOpen","swapFromContainer","swapFromText","swapFromBalance","swapFromAmount","pattern","placeholder","onChange","maxButton","swapFromCryptoSelector","swapFromCryptoName","swapFromCryptoIcon","downArrow","toArrow","swapToContainer","swapToText","swapToBalance","swapToAmount","tabIndex","readOnly","swapToCryptoSelector","swapToCryptoName","swapToCryptoIcon","swapFromCryptoSelectModal","swapToCryptoSelectModal","reviewButton","CryptoSwapApprove","onSwap","receivedAmount","setReceivedAmount","feeAmount","setFeeAmount","ellipsis","setEllipsis","onClickApproveButton","APPROVING","setTimeout","APPROVED","onClickConfirmButton","CONFIRMING","onClickCancelButton","length","swapFromCryptoContainer","swapFromCryptoAmountContainer","swapFromCryptoAmount","swapToCryptoContainer","swapToCryptoAmountContainer","swapToCryptoAmount","swapDetailTitle","swapDetailContainer","swapDetailReceivedContainer","swapDetailReceivedTitle","swapDetailReceivedAmount","swapDetailFeeContainer","swapDetailFeeTitle","swapDetailFeeAmount","approveButton","confirmButton","cancelButton","CryptoSwap","setTitle","onClickCloseButton","cryptoSwap","swapHeader","swapTitle","closeButton","swapBodyContainer","SwapPage","getPrices","id","setInterval","clearInterval","swapPage","innerContainer","App","path","render","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,iBAAmB,yCAAyC,aAAe,qCAAqC,WAAa,mCAAmC,eAAiB,uCAAuC,oBAAsB,4CAA4C,WAAa,mCAAmC,WAAa,mCAAmC,WAAa,mCAAmC,UAAY,kCAAkC,WAAa,mCAAmC,gBAAkB,wCAAwC,eAAiB,uCAAuC,uBAAyB,+CAA+C,cAAgB,sCAAsC,YAAc,oCAAoC,aAAe,qCAAqC,WAAa,qC,mBCAr7BD,EAAOC,QAAU,CAAC,kBAAoB,6CAA6C,kBAAoB,6CAA6C,oBAAsB,+CAA+C,OAAS,kCAAkC,KAAO,gCAAgC,KAAO,kC,mBCAlTD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,eAAiB,iCAAiC,eAAiB,iCAAiC,WAAa,+B,0DCAzKD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,cAAgB,kCAAkC,aAAe,iCAAiC,gBAAkB,oCAAoC,eAAiB,mCAAmC,iBAAmB,qCAAqC,WAAa,+BAA+B,UAAY,8BAA8B,YAAc,gCAAgC,kBAAoB,sCAAsC,SAAW,6BAA6B,cAAgB,kCAAkC,qBAAuB,yCAAyC,kBAAoB,sCAAsC,aAAe,iCAAiC,UAAY,8BAA8B,gBAAkB,oCAAoC,eAAiB,mCAAmC,uBAAyB,2CAA2C,mBAAqB,uCAAuC,mBAAqB,uCAAuC,WAAa,+BAA+B,WAAa,+BAA+B,UAAY,8BAA8B,UAAY,8BAA8B,QAAU,4BAA4B,gBAAkB,oCAAoC,WAAa,+BAA+B,cAAgB,kCAAkC,aAAe,iCAAiC,qBAAuB,yCAAyC,iBAAmB,qCAAqC,iBAAmB,qCAAqC,0BAA4B,8CAA8C,sBAAwB,0CAA0C,wBAA0B,4CAA4C,kBAAoB,sCAAsC,aAAe,iCAAiC,uBAAyB,2CAA2C,QAAU,4BAA4B,iBAAmB,qCAAqC,qBAAuB,yCAAyC,oCAAsC,wDAAwD,+BAAiC,mDAAmD,wCAA0C,4DAA4D,+BAAiC,mDAAmD,+BAAiC,mDAAmD,qCAAuC,yDAAyD,0BAA4B,8CAA8C,4BAA8B,gDAAgD,aAAe,iCAAiC,wBAA0B,4CAA4C,8BAAgC,kDAAkD,qBAAuB,yCAAyC,sBAAwB,0CAA0C,4BAA8B,gDAAgD,mBAAqB,uCAAuC,gBAAkB,oCAAoC,oBAAsB,wCAAwC,4BAA8B,gDAAgD,wBAA0B,4CAA4C,yBAA2B,6CAA6C,uBAAyB,2CAA2C,mBAAqB,uCAAuC,oBAAsB,wCAAwC,cAAgB,kCAAkC,cAAgB,kCAAkC,aAAe,mC,0ECIz7HC,E,yICGNC,EAAyC,CAC7CC,IAAK,EACLC,IAAK,EACLC,IAAK,GASMC,EAAkB,uCAAG,wCAAAC,EAAA,6DAE1BC,EAAM,CAAC,MAAO,MAAO,OACrBC,EAH0B,4DACpB,CAAC,UAAW,kBAAmB,WAAY,YAEcC,KAAK,KAH1C,0BAGgEF,EAAIE,KAAK,MAHzE,SAITC,MAAMF,EAAK,CAAEG,MAAO,aAJX,cAI1BC,EAJ0B,gBAKPA,EAASC,OALF,cAK1BC,EAL0B,yBAMzB,CACLC,KAAI,UAAED,EAAU,mBAAZ,QAA2Bb,EAC/Be,KAAI,UAAEF,EAAU,0BAAZ,QAAkCb,EACtCgB,IAAG,UAAEH,EAAS,gBAAX,QAA2Bb,IATA,4CAAH,sD,SDfnBD,K,YAAAA,E,YAAAA,E,WAAAA,M,KAML,I,EERKkB,EFQCC,GAAyC,mBACnDnB,EAAiBe,KAAO,QAD2B,cAEnDf,EAAiBgB,KAAO,mBAF2B,cAGnDhB,EAAiBiB,IAAM,YAH4B,GAOzCG,GAA4C,mBACtDpB,EAAiBe,KAAO,GAD8B,cAEtDf,EAAiBgB,KAAO,MAF8B,cAGtDhB,EAAiBiB,IAAM,MAH+B,GAmBnDI,GAA8B,mBACjCrB,EAAiBe,MADgB,GAEhCO,IAAK,GAF2B,cAG/BtB,EAAiBe,KAAO,GAHO,cAI/Bf,EAAiBgB,KAAO,GAJO,cAK/BhB,EAAiBiB,IAAM,GALQ,kBAOjCjB,EAAiBgB,MAPgB,GAQhCM,IAAK,GAR2B,cAS/BtB,EAAiBe,KAAO,GATO,cAU/Bf,EAAiBgB,KAAO,GAVO,cAW/BhB,EAAiBiB,IAAM,GAXQ,kBAajCjB,EAAiBiB,KAbgB,GAchCK,IAAK,GAd2B,cAe/BtB,EAAiBe,KAAO,GAfO,cAgB/Bf,EAAiBgB,KAAO,GAhBO,cAiB/BhB,EAAiBiB,IAAM,GAjBQ,OAqBvBM,EAA0BC,YACrC,iCACAnB,GA6BaoB,EA1BiBC,YAAY,CAC1CC,KAAM,cACNN,eAEAO,SAAU,GAGVC,cAAe,SAACC,GACdA,EACGC,QAAQR,EAAwBS,WAAW,SAACC,EAAOC,GAElD,IAAMC,EAAWC,IAAQ,GAAGC,OAAOH,EAAOI,QAAQtC,EAAiBe,MAAMb,KAAO,GAAGqC,QAC7EC,EAAWJ,IAAQ,GAAGC,OAAOH,EAAOI,QAAQtC,EAAiBgB,MAAMd,KAAO,GAAGqC,QACnFN,EAAMjC,EAAiBe,MAAMO,IAAMY,EAAOI,QAAQtC,EAAiBe,MAAMb,IACzE+B,EAAMjC,EAAiBe,MAAMf,EAAiBgB,MAAQoB,IAAQF,EAAOI,QAAQtC,EAAiBe,MAAMb,KAAKuC,SAASD,GAAUD,SAAW,EACvIN,EAAMjC,EAAiBe,MAAMf,EAAiBiB,KAAOiB,EAAOI,QAAQtC,EAAiBe,MAAMX,IAC3F6B,EAAMjC,EAAiBgB,MAAMM,IAAMY,EAAOI,QAAQtC,EAAiBgB,MAAMd,IACzE+B,EAAMjC,EAAiBgB,MAAMhB,EAAiBe,MAAQqB,IAAQF,EAAOI,QAAQtC,EAAiBgB,MAAMd,KAAKuC,SAASN,GAAUI,SAAW,EACvIN,EAAMjC,EAAiBgB,MAAMhB,EAAiBiB,KAAOiB,EAAOI,QAAQtC,EAAiBgB,MAAMZ,IAC3F6B,EAAMjC,EAAiBiB,KAAKK,IAAMY,EAAOI,QAAQtC,EAAiBiB,KAAKf,IACvE+B,EAAMjC,EAAiBiB,KAAKjB,EAAiBe,MAAQqB,IAAQF,EAAOI,QAAQtC,EAAiBiB,KAAKf,KAAKuC,SAASN,GAAUI,SAAW,EACrIN,EAAMjC,EAAiBiB,KAAKjB,EAAiBgB,MAAQoB,IAAQF,EAAOI,QAAQtC,EAAiBiB,KAAKf,KAAKuC,SAASD,GAAUD,SAAW,QAK7I,Q,QGvFaG,EAAU,uCAAG,gCAAApC,EAAA,sEAEhBqC,EAAWC,OACXC,EAAc,IAAIC,IAAOC,UAAUC,aAAaL,EAAIM,UACpDC,EAASL,EAAYM,YAJL,SAKTD,EAAOE,aALE,4IAAH,qDAWVC,EAAa,uCAAG,gCAAA/C,EAAA,sEAEnBqC,EAAWC,OACXC,EAAc,IAAIC,IAAOC,UAAUC,aAAaL,EAAIM,UAHjC,SAInBJ,EAAYS,KAAK,sBAAuB,IAJrB,cAKnBJ,EAASL,EAAYM,YALF,SAMZD,EAAOE,aANK,gFAQzBG,QAAQC,MAAR,MARyB,+DAAH,qDCIpBnC,EAA4B,CAChCoC,sBAAkBC,EAClBC,UAAQ,mBACL3D,EAAiBe,KAAO,KADnB,cAELf,EAAiBgB,KAAO,QAFnB,cAGLhB,EAAiBiB,IAAM,QAHlB,IAOG2C,EAAkBpC,YAC7B,oBACAkB,GAGWmB,EAAqBrC,YAChC,uBACA6B,GAGWS,EAAcpC,YAAY,CACrCC,KAAM,SACNN,eAEAO,SAAU,CACRmC,OAAQ,SAAC9B,EAAOC,GACd,MAAuDA,EAAOI,QAAtD0B,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,SAAUC,EAA1C,EAA0CA,SAC1ClC,EAAM0B,SAASK,GAAc5B,IAAQH,EAAM0B,SAASK,IAAaI,SAASH,GAAY1B,SAAW,EACjGN,EAAM0B,SAASO,GAAY9B,IAAQH,EAAM0B,SAASO,IAAWG,IAAIF,GAAU5B,SAAW,IAK1FV,cAAe,SAACC,GACdA,EACGC,QAAQ6B,EAAgB5B,WAAW,SAACC,EAAOC,GAC1CD,EAAMwB,iBAAmBvB,EAAOI,WAEjCP,QAAQ6B,EAAgBU,UAAU,SAACrC,EAAOC,GACzCD,EAAMwB,sBAAmBC,KAE1B3B,QAAQ8B,EAAmB7B,WAAW,SAACC,EAAOC,GAC7CD,EAAMwB,iBAAmBvB,EAAOI,WAEjCP,QAAQ8B,EAAmBS,UAAU,SAACrC,EAAOC,GAC5CD,EAAMwB,sBAAmBC,QAKlBK,EAAWD,EAAYS,QAAvBR,OAEAD,IAAf,S,SFjEY5C,K,kBAAAA,E,gBAAAA,E,sBAAAA,E,oBAAAA,E,yBAAAA,M,KAeZ,IAAMG,EAA4B,CAChCmD,OAAQtD,EAAWuD,QACnBT,WAAYhE,EAAiBe,KAC7BkD,WAAY,GACZC,SAAUlE,EAAiBe,MAGhB2D,EAAchD,YAAY,CACrCC,KAAM,SACNN,eAEAO,SAAU,CACR+C,MAAO,SAAC1C,GAAD,OAAWZ,GAClBuD,UAAW,SAAC3C,EAAOC,GACjBD,EAAMuC,OAAStC,EAAOI,SAExBuC,cAAe,SAAC5C,EAAOC,GACrBD,EAAM+B,WAAa9B,EAAOI,SAE5BwC,cAAe,SAAC7C,EAAOC,GACrBD,EAAMgC,WAAa/B,EAAOI,SAE5ByC,YAAa,SAAC9C,EAAOC,GACnBD,EAAMiC,SAAWhC,EAAOI,UAK5BT,cAAe,SAACC,GAAD,OAAaA,KAGvB,EAAwE4C,EAAYH,QAA5EI,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,cAAeC,EAAzC,EAAyCA,cAAeC,EAAxD,EAAwDA,YAEhDL,IAAf,QG3CaM,EAAUC,YAAqB,CAAEC,SAAUC,sBAE3CC,GAAcC,YAAgB,CACzCC,OAAQC,YAAcP,GACtBQ,MAAOC,EACPC,OAAQC,EACRC,OAAQC,IAGGC,GAAQC,YAAe,CAClCC,QAASZ,GACTa,WAAY,SAACC,GAAD,OAA0BA,IAAuBC,OAAOC,YAAiBpB,O,SCf1EqB,GAAiB,kBAAMC,gBACvBC,GAAkDC,K,oBCLhD,OAA0B,qC,QC+B1BC,GAvBW,WACxB,IAAMC,EAAWL,KACX5C,EAAmB8C,IAAe,SAACtE,GAAD,OAAWA,EAAMyD,OAAOjC,oBAC1DkD,EAAaC,uBAAY,kBAAMF,EAAS7C,OAAuB,CAAC6C,IAEtE,OAAMjD,EACG,eAAC,IAAD,CAAUoD,GAAG,UAIpB,uBAAKC,UAAWC,KAAOC,kBAAvB,UACE,uBAAMF,UAAWC,KAAOE,kBAAxB,6BACA,0BAAQH,UAAWC,KAAOG,oBAAqBC,QAASR,EAAxD,UACE,uBAAMG,UAAWC,KAAOK,KAAxB,SACE,sBAAKC,IAAKC,GAAaC,IAAI,oBAE7B,uBAAMT,UAAWC,KAAOS,KAAxB,sBACA,uBAAMV,UAAWC,KAAOU,gB,oBCD1BC,GAAkB,SAACC,GAAD,OACtB,sBAAIb,UAAWC,KAAOa,eAAtB,UACE,uBAAKd,UAAWC,KAAOc,oBAAvB,UACE,sBAAKf,UAAS,UAAKC,KAAOe,WAAZ,YAA0Bf,KAAO,SAAWY,EAAMI,WAChE,uBAAKjB,UAAWC,KAAOiB,WAAvB,UACE,uBAAMlB,UAAWC,KAAOkB,gBAAxB,SAA0CN,EAAMI,SAChD,uBAAMjB,UAAWC,KAAOmB,eAAxB,SAAyC/G,EAAawG,EAAMI,gBAGhE,uBAAKjB,UAAWC,KAAOoB,uBAAvB,UACE,uBAAKrB,UAAWC,KAAOqB,cAAvB,UACE,uBAAMtB,UAAWC,KAAOsB,YAAxB,SAAsCjG,IAAQuF,EAAMW,SAAS7F,SAASkF,EAAMnC,OAAO+C,OAAO,aAC1F,uBAAMzB,UAAWC,KAAOyB,aAAxB,SAAuCpG,IAAQuF,EAAMW,SAASC,OAAO,uBAEvE,yBAAQzB,UAAWC,KAAO0B,WAAYtB,QAASQ,EAAMe,SAAUC,UAAWhB,EAAMiB,mBAyCvEC,GApCQ,SAAClB,GAAgC,IAAD,EAC7CmB,EAA6CnB,EAA7CmB,OAAQnF,EAAqCgE,EAArChE,SAAUa,EAA2BmD,EAA3BnD,OAAQuE,EAAmBpB,EAAnBoB,eAE5BC,EAAapC,uBAAY,kBAAMmC,EAAe/I,EAAiBe,QAAO,CAACgI,IACvEE,EAAarC,uBAAY,kBAAMmC,EAAe/I,EAAiBgB,QAAO,CAAC+H,IACvEG,EAAYtC,uBAAY,kBAAMmC,EAAe/I,EAAiBiB,OAAM,CAAC8H,IAE3E,OACE,sBAAKjC,UAAS,oBAAKa,EAAMb,iBAAX,QAAwB,GAAxB,YAA8BC,KAAOoC,gBAAnD,SACE,uBAAKrC,UAAWC,KAAOqC,iBAAvB,UACE,uBAAMtC,UAAWC,KAAOsC,aAAxB,sBACA,sBAAIvC,UAAWC,KAAOuC,WAAtB,UACE,eAAC,GAAD,CACEvB,OAAQ/H,EAAiBe,KACzBuH,QAAS3E,EAAS3D,EAAiBe,MACnCyE,MAAOsD,EAAO9I,EAAiBe,MAAMO,IACrCsH,UAAWpE,IAAWtD,EAAWuD,QACjCiE,SAAUM,IACZ,eAAC,GAAD,CACEjB,OAAQ/H,EAAiBgB,KACzBsH,QAAS3E,EAAS3D,EAAiBgB,MACnCwE,MAAOsD,EAAO9I,EAAiBgB,MAAMM,IACrCsH,UAAWpE,IAAWtD,EAAWuD,QACjCiE,SAAUO,IACZ,eAAC,GAAD,CACElB,OAAQ/H,EAAiBiB,IACzBqH,QAAS3E,EAAS3D,EAAiBiB,KACnCuE,MAAOsD,EAAO9I,EAAiBiB,KAAKK,IACpCsH,UAAWpE,IAAWtD,EAAWuD,QACjCiE,SAAUQ,a,4BCzDhBK,GAAuB,SAAC5B,GAC5B,IAAQI,EAAqCJ,EAArCI,OAAQvC,EAA6BmC,EAA7BnC,MAAO8C,EAAsBX,EAAtBW,QAASI,EAAaf,EAAbe,SAChC,EAAsCc,mBAAS,IAA/C,oBAAOnB,EAAP,KAAoBoB,EAApB,KACMC,EAAkB9C,uBAAY,kBAAM8B,EAASX,KAAS,CAACA,EAAQW,IAIrE,OAFAiB,qBAAU,kBAAMF,EAAerH,IAAQoD,GAAO/C,SAAS6F,GAASC,OAAO,sBAAqB,CAAC/C,EAAO8C,IAGlG,sBAAIxB,UAAWC,KAAO6C,qBAAsBzC,QAASuC,EAArD,UACE,uBAAK5C,UAAWC,KAAO8C,oCAAvB,UACE,sBAAK/C,UAAS,UAAKC,KAAO+C,+BAAZ,YAA8C/C,KAAO,SAAWgB,MAC9E,uBAAKjB,UAAWC,KAAOgD,wCAAvB,UACE,uBAAMjD,UAAWC,KAAOiD,+BAAxB,SAAyDjC,IACzD,uBAAMjB,UAAWC,KAAOkD,+BAAxB,SAAyD9I,EAAa4G,WAG1E,uBAAKjB,UAAWC,KAAOmD,qCAAvB,UACE,uBAAMpD,UAAWC,KAAOoD,0BAAxB,SAAoD9B,IACpD,uBAAMvB,UAAWC,KAAOqD,4BAAxB,SAAsD9B,WA0C/C+B,GA3BW,SAAC1C,GAAD,aAAmCA,EAAM2C,OACjE,uBAAKxD,UAAS,oBAAKa,EAAMb,iBAAX,QAAwB,GAAxB,YAA8BC,KAAOwD,mBAAnD,UACE,sBAAKzD,UAAWC,KAAOyD,aAAcrD,QAASQ,EAAM8C,UACpD,uBAAK3D,UAAWC,KAAO2D,sBAAvB,UACE,uBAAM5D,UAAWC,KAAO4D,uBAAxB,SAAiDhD,EAAMiD,QACvD,yBAAQ9D,UAAWC,KAAO8D,QAAS1D,QAASQ,EAAM8C,UAClD,sBAAI3D,UAAWC,KAAO+D,iBAAtB,UACE,eAAC,GAAD,CACE/C,OAAQ/H,EAAiBe,KACzByE,MAAOmC,EAAMmB,OAAO9I,EAAiBe,MAAMO,IAC3CgH,QAASX,EAAMhE,SAAS3D,EAAiBe,MACzC2H,SAAUf,EAAMoD,mBAClB,eAAC,GAAD,CACEhD,OAAQ/H,EAAiBgB,KACzBwE,MAAOmC,EAAMmB,OAAO9I,EAAiBgB,MAAMM,IAC3CgH,QAASX,EAAMhE,SAAS3D,EAAiBgB,MACzC0H,SAAUf,EAAMoD,mBAClB,eAAC,GAAD,CACEhD,OAAQ/H,EAAiBiB,IACzBuE,MAAOmC,EAAMmB,OAAO9I,EAAiBiB,KAAKK,IAC1CgH,QAASX,EAAMhE,SAAS3D,EAAiBiB,KACzCyH,SAAUf,EAAMoD,4BAItB,MC6DWC,GAlHW,SAACrD,GACzB,IAAQmB,EAA4GnB,EAA5GmB,OAAQnF,EAAoGgE,EAApGhE,SAAUsH,EAA0FtD,EAA1FsD,QAASC,EAAiFvD,EAAjFuD,mBAAoBC,EAA6DxD,EAA7DwD,mBAAoBC,EAAyCzD,EAAzCyD,mBAAoBC,EAAqB1D,EAArB0D,iBAC/F,EAAsC7B,mBAAS,IAA/C,oBAAO8B,EAAP,KAAoBC,EAApB,KACA,EAAkC/B,mBAAS,IAA3C,oBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAAgCjC,mBAAS,IAAzC,oBAAOrF,EAAP,KAAiBuH,EAAjB,KACA,EAA0ClC,oBAAS,GAAnD,oBAAOmC,EAAP,KAAsBC,EAAtB,KACA,EAAwDpC,oBAAS,GAAjE,oBAAOqC,EAAP,KAA6BC,EAA7B,KACA,EAAoDtC,oBAAS,GAA7D,oBAAOuC,EAAP,KAA2BC,EAA3B,KAGArC,qBAAU,WACR,IAAKvH,IAAQ6I,EAAQhH,YAAY1B,SAAW,GAAK,EAAG,CAClD,IAAM0J,EAAS7J,IAAQ6I,EAAQhH,YAAYxB,SAASqG,EAAOmC,EAAQjH,YAAYiH,EAAQ/G,WACvFwH,EAAYO,EAAO1D,OAAO,sBAE1BmD,EAAY,MAEb,CAAC5C,EAAQmC,EAASS,IACrB/B,qBAAU,kBAAMiC,EAAgE,KAA9CxJ,IAAQ6I,EAAQhH,YAAY1B,SAAW,IAAY0I,EAAQjH,aAAeiH,EAAQ/G,YAAW,CAAC+G,IAChItB,qBAAU,kBAAM4B,EAAenJ,IAAQuB,EAASsH,EAAQjH,aAAauE,OAAO,qBAAoB,CAAC5E,EAAUsH,EAAQjH,aACnH2F,qBAAU,kBAAM8B,EAAarJ,IAAQuB,EAASsH,EAAQ/G,WAAWqE,OAAO,qBAAoB,CAAC5E,EAAUsH,EAAQ/G,WAE/G,IAAMgI,EAAmBtF,uBAAY,kBAAMwE,EAAmB,GAAD,OAAIzH,EAASsH,EAAQjH,gBAAgB,CAACL,EAAUsH,EAAQjH,WAAYoH,IAC3He,EAAsBvF,uBAAY,kBAAMsE,EAAmBhK,EAAWkL,UAAS,CAAClB,IAChFmB,EAA0BzF,uBAAY,SAAC0F,GAC3C,IAAKA,EAAGC,OAAOC,SAASC,gBAAiB,CACvC,IAAMC,EAAMJ,EAAGC,OAAOhK,MAChB0J,EAAS7J,IAAQsK,GAAKnK,SAAW,EACnC0J,EAAStI,EAASsH,EAAQjH,YAC5BoH,EAAmB,GAAD,OAAIzH,EAASsH,EAAQjH,cAEvCoH,EADSa,GAAU,EACA,GAEAS,MAGtB,CAAC/I,EAAUsH,EAAQjH,WAAYoH,IAC5BuB,EAAqB/F,uBAAY,SAACmB,GACtCoD,EAAmBpD,GACnBqD,EAAmB,IACnBU,GAAwB,KACvB,CAACX,EAAoBC,IAClBwB,EAAmBhG,uBAAY,SAACmB,GACpCsD,EAAiBtD,GACjBiE,GAAsB,KACrB,CAACX,IACEwB,EAA4BjG,uBAAY,WAC5CkF,GAAwB,GACxBE,GAAsB,KACrB,IACGc,EAA6BlG,uBAAY,kBAAMkF,GAAwB,KAAQ,IAC/EiB,EAA0BnG,uBAAY,WAC1CkF,GAAwB,GACxBE,GAAsB,KACrB,IACGgB,EAA2BpG,uBAAY,kBAAMoF,GAAsB,KAAQ,IAEjF,OACE,uBAAKlF,UAAWC,KAAOkG,SAAvB,UACE,uBAAKnG,UAAS,UAAKC,KAAOmG,cAAZ,YAA8BrB,GAAwBE,EAAsBhF,KAAOoG,qBAAuB,IAAxH,UACE,uBAAKrG,UAAWC,KAAOqG,kBAAvB,UACE,uBAAMtG,UAAWC,KAAOsG,aAAxB,kBACA,wBAAMvG,UAAWC,KAAOuG,gBAAxB,sBAAmDhC,KACnD,wBACExE,UAAWC,KAAOwG,eAClBC,QAAQ,mBACRC,YAAY,OACZlL,MAAO0I,EAAQhH,WACfyJ,SAAUrB,IACZ,yBAAQvF,UAAWC,KAAO4G,UAAWxG,QAAS+E,EAA9C,iBACA,uBAAKpF,UAAWC,KAAO6G,uBAAvB,UACE,uBAAM9G,UAAWC,KAAO8G,mBAAxB,SAA6C5C,EAAQjH,aACrD,sBAAK8C,UAAS,UAAKC,KAAO+G,mBAAZ,YAAkC/G,KAAO,SAAWkE,EAAQjH,eAC1E,yBAAQ8C,UAAWC,KAAOgH,UAAW5G,QAAS0F,UAGlD,sBAAK/F,UAAWC,KAAOiH,UACvB,uBAAKlH,UAAWC,KAAOkH,gBAAvB,UACE,uBAAMnH,UAAWC,KAAOmH,WAAxB,gBACA,wBAAMpH,UAAWC,KAAOoH,cAAxB,sBAAiD3C,KACjD,wBACE1E,UAAWC,KAAOqH,aAClBC,UAAW,EACXZ,YAAY,OACZa,UAAQ,EACR/L,MAAO4B,IACT,uBAAK2C,UAAWC,KAAOwH,qBAAvB,UACE,uBAAMzH,UAAWC,KAAOyH,iBAAxB,SAA2CvD,EAAQ/G,WACnD,sBAAK4C,UAAS,UAAKC,KAAO0H,iBAAZ,YAAgC1H,KAAO,SAAWkE,EAAQ/G,aACxE,yBAAQ4C,UAAWC,KAAOgH,UAAW5G,QAAS4F,aAIpD,eAAC,GAAD,CACEjG,UAAWC,KAAO2H,0BAClBpE,OAAQuB,EACRjB,MAAM,OACN9B,OAAQA,EACRnF,SAAUA,EACV8G,QAASqC,EACT/B,iBAAkB4B,IACpB,eAAC,GAAD,CACE7F,UAAWC,KAAO4H,wBAClBrE,OAAQyB,EACRnB,MAAM,KACN9B,OAAQA,EACRnF,SAAUA,EACV8G,QAASuC,EACTjC,iBAAkB6B,IACpB,yBAAQ9F,UAAWC,KAAO6H,aAAcjG,SAAUgD,EAAexE,QAASgF,EAA1E,wBCvCS0C,GA3EW,SAAClH,GACzB,IAAQmB,EAAgDnB,EAAhDmB,OAAQmC,EAAwCtD,EAAxCsD,QAASC,EAA+BvD,EAA/BuD,mBAAoB4D,EAAWnH,EAAXmH,OAC7C,EAAoCtF,mBAAS,IAA7C,oBAAOvF,EAAP,KAAmBa,EAAnB,KACA,EAAgC0E,mBAAS,IAAzC,oBAAOrF,EAAP,KAAiBuH,EAAjB,KACA,EAA4ClC,mBAAS,IAArD,oBAAOuF,EAAP,KAAuBC,EAAvB,KACA,EAAkCxF,mBAAS,IAA3C,oBAAOyF,EAAP,KAAkBC,EAAlB,KACA,EAAgC1F,mBAAS,IAAzC,oBAAO2F,EAAP,KAAiBC,EAAjB,KAGAzF,qBAAU,kBAAM7E,EAAc1C,IAAQ6I,EAAQhH,YAAYsE,OAAO,qBAAoB,CAAC0C,EAAQhH,aAC9F0F,qBAAU,WACR,IAAKvH,IAAQ6I,EAAQhH,YAAY1B,SAAW,GAAK,EAAG,CAClD,IAAM0J,EAAS7J,IAAQ6I,EAAQhH,YAAYxB,SAASqG,EAAOmC,EAAQjH,YAAYiH,EAAQ/G,WACvFwH,EAAYO,EAAO1D,OAAO,iBAC1ByG,EAAkB/C,EAAO7H,SAAShD,EAAgB6J,EAAQ/G,WAAWqE,OAAO,sBAE5EmD,EAAY,QACZsD,EAAkB,UAEnB,CAAClG,EAAQmC,EAAQhH,WAAYgH,EAAQjH,WAAYiH,EAAQ/G,SAAUwH,IACtE/B,qBAAU,kBAAMuF,EAAa9M,IAAQhB,EAAgB6J,EAAQ/G,WAAWqE,OAAO,qBAAoB,CAAC0C,EAAQ/G,WAE5G,IAAMmL,EAAuBzI,uBAAY,WACvCsE,EAAmBhK,EAAWoO,WAC9BC,YAAW,kBAAMrE,EAAmBhK,EAAWsO,YAAW,OACzD,CAACtE,IACEuE,EAAuB7I,uBAAY,WACvCsE,EAAmBhK,EAAWwO,YAC9BH,WAAWT,EAAQ,OAClB,CAAC5D,EAAoB4D,IAClBa,EAAsB/I,uBAAY,kBAAMsE,EAAmBhK,EAAWuD,WAAU,CAACyG,IAMvF,OAJID,EAAQzG,SAAWtD,EAAWoO,WAAarE,EAAQzG,SAAWtD,EAAWwO,YAC3EH,YAAW,kBAAMH,EAAYD,EAASS,QAAU,EAAI,GAAMT,EAAW,OAAO,KAI5E,uBAAKrI,UAAWC,KAAOkG,SAAvB,UACE,uBAAKnG,UAAWC,KAAOmG,cAAvB,UACE,uBAAKpG,UAAWC,KAAO8I,wBAAvB,UACE,uBAAK/I,UAAWC,KAAO+I,8BAAvB,UACE,sBAAKhJ,UAAS,UAAKC,KAAO+G,mBAAZ,YAAkC/G,KAAO,SAAWkE,EAAQjH,eAC1E,uBAAM8C,UAAWC,KAAOgJ,qBAAxB,SAA+C9L,OAEjD,uBAAM6C,UAAWC,KAAO8G,mBAAxB,SAA6C5C,EAAQjH,gBAEvD,sBAAK8C,UAAWC,KAAOiH,UACvB,uBAAKlH,UAAWC,KAAOiJ,sBAAvB,UACE,uBAAKlJ,UAAWC,KAAOkJ,4BAAvB,UACE,sBAAKnJ,UAAS,UAAKC,KAAO0H,iBAAZ,YAAgC1H,KAAO,SAAWkE,EAAQ/G,aACxE,uBAAM4C,UAAWC,KAAOmJ,mBAAxB,SAA6C/L,OAE/C,uBAAM2C,UAAWC,KAAOyH,iBAAxB,SAA2CvD,EAAQ/G,cAErD,uBAAM4C,UAAWC,KAAOoJ,gBAAxB,qBACA,uBAAKrJ,UAAWC,KAAOqJ,oBAAvB,UACE,uBAAKtJ,UAAWC,KAAOsJ,4BAAvB,UACE,uBAAMvJ,UAAWC,KAAOuJ,wBAAxB,8BACA,wBAAMxJ,UAAWC,KAAOwJ,yBAAxB,UAAmDxB,EAAnD,IAAoE9D,EAAQ/G,eAE9E,uBAAK4C,UAAWC,KAAOyJ,uBAAvB,UACE,uBAAM1J,UAAWC,KAAO0J,mBAAxB,qCACA,wBAAM3J,UAAWC,KAAO2J,oBAAxB,UAA8CzB,EAA9C,IAA0DhE,EAAQ/G,qBAIvE+G,EAAQzG,SAAWtD,EAAWkL,QAAU,yBAAQtF,UAAWC,KAAO4J,cAAexJ,QAASkI,EAAlD,0BACxCpE,EAAQzG,SAAWtD,EAAWoO,WAAa,0BAAQxI,UAAWC,KAAO4J,cAAehI,UAAQ,EAAjD,8BAAoEwG,KAC/GlE,EAAQzG,SAAWtD,EAAWsO,UAAY,yBAAQ1I,UAAWC,KAAO6J,cAAezJ,QAASsI,EAAlD,0BAC1CxE,EAAQzG,SAAWtD,EAAWwO,YAAc,0BAAQ5I,UAAWC,KAAO6J,cAAejI,UAAQ,EAAjD,8BAAoEwG,KACjH,yBAAQrI,UAAWC,KAAO8J,aAAc1J,QAASwI,EAAjD,wBCXSmB,GAtDI,SAACnJ,GAA4B,IAAD,EACrCmB,EAAoHnB,EAApHmB,OAAQnF,EAA4GgE,EAA5GhE,SAAUsH,EAAkGtD,EAAlGsD,QAASC,EAAyFvD,EAAzFuD,mBAAoBC,EAAqExD,EAArEwD,mBAAoBC,EAAiDzD,EAAjDyD,mBAAoBC,EAA6B1D,EAA7B0D,iBAAkByD,EAAWnH,EAAXmH,OACjH,EAA0BtF,mBAAS,IAAnC,oBAAOoB,EAAP,KAAcmG,EAAd,KAGApH,qBAAU,WACR,OAAQsB,EAAQzG,QACd,KAAKtD,EAAWuD,QACdsM,EAAS,QACT,MACF,KAAK7P,EAAWkL,OAChB,KAAKlL,EAAWoO,UACdyB,EAAS,gBACT,MAEF,KAAK7P,EAAWsO,SAChB,KAAKtO,EAAWwO,WACdqB,EAAS,mBAGZ,CAAC9F,EAAQzG,SAEZ,IAAMwM,EAAqBpK,uBAAY,kBAAMsE,EAAmBhK,EAAWuD,WAAU,CAACyG,IAEtF,OACE,uBAAKpE,UAAS,oBAAKa,EAAMb,iBAAX,QAAwB,GAAxB,YAA8BC,KAAOkK,WAArC,YAAmDlK,KAAO,SAAWkE,EAAQzG,SAA3F,UACE,uBAAKsC,UAAWC,KAAOmK,WAAvB,UACE,uBAAMpK,UAAWC,KAAOoK,UAAxB,SAAoCvG,IACnCK,EAAQzG,SAAWtD,EAAWuD,SAAW,yBAAQqC,UAAWC,KAAOqK,YAAajK,QAAS6J,OAE5F,uBAAKlK,UAAS,UAAKC,KAAOsK,kBAAZ,YAAiCtK,KAAO,SAAWkE,EAAQzG,SAAzE,UACGyG,EAAQzG,SAAWtD,EAAWuD,SAC7B,eAAC,GAAD,CACEd,SAAUA,EACVmF,OAAQA,EACRmC,QAASA,EACTC,mBAAoBA,EACpBC,mBAAoBA,EACpBC,mBAAoBA,EACpBC,iBAAkBA,IAErBJ,EAAQzG,SAAWtD,EAAWuD,SAC7B,eAAC,GAAD,CACEd,SAAUA,EACVmF,OAAQA,EACRmC,QAASA,EACTC,mBAAoBA,EACpB4D,OAAQA,W,oBCKLwC,GA3DE,WACf,IAAM5K,EAAWL,KACX5C,EAAmB8C,IAAe,SAACtE,GAAD,OAAWA,EAAMyD,OAAOjC,oBAC1DE,EAAW4C,IAAe,SAACtE,GAAD,OAAWA,EAAMyD,OAAO/B,YAClDmF,EAASvC,IAAe,SAACtE,GAAD,OAAWA,EAAMuD,SACzCI,EAASW,IAAe,SAACtE,GAAD,OAAWA,EAAM2D,UAEzC2L,EAAY3K,uBAAY,kBAAMF,EAASnF,OAA4B,CAACmF,IACpEwE,EAAqBtE,uBAAY,SAACpC,GAAD,OAAwBkC,EAAS9B,EAAUJ,MAAU,CAACkC,IACvFyE,EAAqBvE,uBAAY,SAACmB,GAAD,OAA8BrB,EAAS7B,EAAckD,MAAU,CAACrB,IACjG0E,EAAqBxE,uBAAY,SAACqF,GAAD,OAAoBvF,EAAS5B,EAAcmH,MAAU,CAACvF,IACvF2E,EAAmBzE,uBAAY,SAACmB,GAAD,OAA8BrB,EAAS3B,EAAYgD,MAAU,CAACrB,IAC7FqC,EAAiBnC,uBAAY,SAACmB,GAClCrB,EAAS7B,EAAckD,IACvBrB,EAAS5B,EAAc,OACtB,CAAC4B,IACEoI,EAASlI,uBAAY,WACzB,IAAQ5C,EAAqC4B,EAArC5B,WAAYC,EAAyB2B,EAAzB3B,WAAYC,EAAa0B,EAAb1B,SAC1BC,EAAW/B,IAAQ6B,GAAYxB,SAASqG,EAAO9E,GAAYE,IAAW3B,SAAW,EACvFmE,EAAS3C,EAAO,CAAEC,aAAYC,WAAY7B,IAAQ6B,GAAY1B,SAAW,EAAG2B,WAAUC,cACtFuC,EAAS/B,OACR,CAAC+B,EAAUoC,EAAQlD,IAUtB,OARA+D,qBAAU,WACR,GAAIlG,EAAkB,CACpB8N,IACA,IAAMC,EAAKC,YAAYF,EAAW,KAClC,OAAO,kBAAMG,cAAcF,OAE5B,CAAC/N,EAAkB8N,IAEjB9N,EAKH,sBAAKqD,UAAWC,KAAO4K,SAAvB,SACE,uBAAK7K,UAAWC,KAAO6K,eAAvB,UACE,eAAC,GAAD,CACE9K,UAAWC,KAAOoC,eAClBxF,SAAUA,EACVmF,OAAQA,EACRtE,OAAQoB,EAAOpB,OACfuE,eAAgBA,IAClB,eAAC,GAAD,CACEjC,UAAWC,KAAOkK,WAClBtN,SAAUA,EACVmF,OAAQA,EACRmC,QAASrF,EACTsF,mBAAoBA,EACpBC,mBAAoBA,EACpBC,mBAAoBA,EACpBC,iBAAkBA,EAClByD,OAAQA,SArBP,eAAC,IAAD,CAAUjI,GAAG,OChBTgL,I,MAjBH,WACV,IAAMnL,EAAWL,KAMjB,OAJAsD,qBAAU,WACRjD,EAAS9C,OACR,CAAC8C,IAGF,eAAC,IAAD,CAAiB1B,QAASA,EAA1B,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO8M,KAAK,QAAQC,OAAQ,kBAAM,eAAC,GAAD,OAClC,eAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBAAM,eAAC,GAAD,cCXlBC,QACW,cAA7BpP,OAAOqP,SAASC,UAEe,UAA7BtP,OAAOqP,SAASC,UAEhBtP,OAAOqP,SAASC,SAASC,MACvB,2DCVNC,IAASL,OACP,eAAC,IAAMM,WAAP,UACE,eAAC,KAAD,CAAUvM,MAAOA,GAAjB,SACE,eAAC,GAAD,QAGJwM,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACtP,GACND,QAAQC,MAAMA,EAAMuP,c","file":"static/js/main.ba545c57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cryptoBalances\":\"CryptoBalances_cryptoBalances__1ftal\",\"balanceContainer\":\"CryptoBalances_balanceContainer__2h8Ib\",\"balanceTitle\":\"CryptoBalances_balanceTitle__1g5Ay\",\"cryptoList\":\"CryptoBalances_cryptoList__1fWLn\",\"cryptoListItem\":\"CryptoBalances_cryptoListItem__miOz8\",\"cryptoNameContainer\":\"CryptoBalances_cryptoNameContainer__2lVs2\",\"cryptoIcon\":\"CryptoBalances_cryptoIcon__bQArN\",\"cryptoUSDC\":\"CryptoBalances_cryptoUSDC__2-PUT\",\"cryptoWBTC\":\"CryptoBalances_cryptoWBTC__19JUY\",\"cryptoETH\":\"CryptoBalances_cryptoETH__1dHn4\",\"cryptoName\":\"CryptoBalances_cryptoName__3IdtO\",\"cryptoNameTitle\":\"CryptoBalances_cryptoNameTitle__e8VYh\",\"cryptoNameDesc\":\"CryptoBalances_cryptoNameDesc__2PQkz\",\"cryptoBalanceContainer\":\"CryptoBalances_cryptoBalanceContainer__pg9mw\",\"cryptoBalance\":\"CryptoBalances_cryptoBalance__3QPpf\",\"cryptoValue\":\"CryptoBalances_cryptoValue__3dSlK\",\"cryptoAmount\":\"CryptoBalances_cryptoAmount__kkc7Q\",\"rightArrow\":\"CryptoBalances_rightArrow__1dQh6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"connectWalletPage\":\"ConnectWalletPage_connectWalletPage__18bAY\",\"connectWalletText\":\"ConnectWalletPage_connectWalletText__2-1Yb\",\"connectWalletButton\":\"ConnectWalletPage_connectWalletButton__1JXVy\",\"spacer\":\"ConnectWalletPage_spacer__1ucgT\",\"text\":\"ConnectWalletPage_text__X996e\",\"icon\":\"ConnectWalletPage_icon__3sqC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swapPage\":\"SwapPage_swapPage__2tOzQ\",\"innerContainer\":\"SwapPage_innerContainer__1fZbS\",\"cryptoBalances\":\"SwapPage_cryptoBalances__12Iwu\",\"cryptoSwap\":\"SwapPage_cryptoSwap__1FMqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cryptoSwap\":\"CryptoSwap_cryptoSwap__1HNiH\",\"statusINITIAL\":\"CryptoSwap_statusINITIAL__9loCI\",\"statusREVIEW\":\"CryptoSwap_statusREVIEW__1btK5\",\"statusAPPROVING\":\"CryptoSwap_statusAPPROVING__1EWEe\",\"statusAPPROVED\":\"CryptoSwap_statusAPPROVED__su7xj\",\"statusCONFIRMING\":\"CryptoSwap_statusCONFIRMING__B8Z0g\",\"swapHeader\":\"CryptoSwap_swapHeader__25xY2\",\"swapTitle\":\"CryptoSwap_swapTitle__Wrfev\",\"closeButton\":\"CryptoSwap_closeButton__t-lYJ\",\"swapBodyContainer\":\"CryptoSwap_swapBodyContainer__2ZgXx\",\"swapBody\":\"CryptoSwap_swapBody__t-jPY\",\"swapInnerBody\":\"CryptoSwap_swapInnerBody__28Sc8\",\"swapCryptoSelectOpen\":\"CryptoSwap_swapCryptoSelectOpen__3-vwB\",\"swapFromContainer\":\"CryptoSwap_swapFromContainer__1pdQO\",\"swapFromText\":\"CryptoSwap_swapFromText__38NDt\",\"maxButton\":\"CryptoSwap_maxButton__1UIDB\",\"swapFromBalance\":\"CryptoSwap_swapFromBalance__26nWZ\",\"swapFromAmount\":\"CryptoSwap_swapFromAmount__1Ys_6\",\"swapFromCryptoSelector\":\"CryptoSwap_swapFromCryptoSelector__2YjfD\",\"swapFromCryptoName\":\"CryptoSwap_swapFromCryptoName__wirMY\",\"swapFromCryptoIcon\":\"CryptoSwap_swapFromCryptoIcon__29ViW\",\"cryptoUSDC\":\"CryptoSwap_cryptoUSDC__uq6Xt\",\"cryptoWBTC\":\"CryptoSwap_cryptoWBTC__CfgwO\",\"cryptoETH\":\"CryptoSwap_cryptoETH__2p7we\",\"downArrow\":\"CryptoSwap_downArrow__2evlD\",\"toArrow\":\"CryptoSwap_toArrow__-zzGy\",\"swapToContainer\":\"CryptoSwap_swapToContainer__1RvV7\",\"swapToText\":\"CryptoSwap_swapToText__1JZ3o\",\"swapToBalance\":\"CryptoSwap_swapToBalance__2GOg6\",\"swapToAmount\":\"CryptoSwap_swapToAmount__1HDsB\",\"swapToCryptoSelector\":\"CryptoSwap_swapToCryptoSelector__An7fp\",\"swapToCryptoName\":\"CryptoSwap_swapToCryptoName__17pk-\",\"swapToCryptoIcon\":\"CryptoSwap_swapToCryptoIcon__3roDc\",\"swapFromCryptoSelectModal\":\"CryptoSwap_swapFromCryptoSelectModal__Oqq8N\",\"cryptoSelectModalBody\":\"CryptoSwap_cryptoSelectModalBody__TwRiG\",\"swapToCryptoSelectModal\":\"CryptoSwap_swapToCryptoSelectModal__BQmpx\",\"cryptoSelectModal\":\"CryptoSwap_cryptoSelectModal__4aNfe\",\"modalOverlay\":\"CryptoSwap_modalOverlay__1lgms\",\"cryptoSelectModalTitle\":\"CryptoSwap_cryptoSelectModalTitle__3fNX5\",\"upArrow\":\"CryptoSwap_upArrow__3dsWR\",\"cryptoSelectList\":\"CryptoSwap_cryptoSelectList__D4wh1\",\"cryptoSelectListItem\":\"CryptoSwap_cryptoSelectListItem__2YBHE\",\"cryptoSelectListItemCryptoContainer\":\"CryptoSwap_cryptoSelectListItemCryptoContainer__kR3r-\",\"cryptoSelectListItemCryptoIcon\":\"CryptoSwap_cryptoSelectListItemCryptoIcon__3TKSV\",\"cryptoSelectListItemCryptoNameContainer\":\"CryptoSwap_cryptoSelectListItemCryptoNameContainer__3qXiR\",\"cryptoSelectListItemCryptoName\":\"CryptoSwap_cryptoSelectListItemCryptoName__2yQj2\",\"cryptoSelectListItemCryptoDesc\":\"CryptoSwap_cryptoSelectListItemCryptoDesc__Vdp0-\",\"cryptoSelectListItemBalanceContainer\":\"CryptoSwap_cryptoSelectListItemBalanceContainer__1-v3A\",\"cryptoSelectListItemValue\":\"CryptoSwap_cryptoSelectListItemValue__3XT4W\",\"cryptoSelectListItemBalance\":\"CryptoSwap_cryptoSelectListItemBalance__3vzPd\",\"reviewButton\":\"CryptoSwap_reviewButton__1Q31m\",\"swapFromCryptoContainer\":\"CryptoSwap_swapFromCryptoContainer__bUL77\",\"swapFromCryptoAmountContainer\":\"CryptoSwap_swapFromCryptoAmountContainer__1WHWU\",\"swapFromCryptoAmount\":\"CryptoSwap_swapFromCryptoAmount__x8r8l\",\"swapToCryptoContainer\":\"CryptoSwap_swapToCryptoContainer__VR9uM\",\"swapToCryptoAmountContainer\":\"CryptoSwap_swapToCryptoAmountContainer__1Y0YT\",\"swapToCryptoAmount\":\"CryptoSwap_swapToCryptoAmount__5D877\",\"swapDetailTitle\":\"CryptoSwap_swapDetailTitle__31OvK\",\"swapDetailContainer\":\"CryptoSwap_swapDetailContainer__1kpUL\",\"swapDetailReceivedContainer\":\"CryptoSwap_swapDetailReceivedContainer__3hz2f\",\"swapDetailReceivedTitle\":\"CryptoSwap_swapDetailReceivedTitle__3v0Cm\",\"swapDetailReceivedAmount\":\"CryptoSwap_swapDetailReceivedAmount__2TWF-\",\"swapDetailFeeContainer\":\"CryptoSwap_swapDetailFeeContainer__3-ixs\",\"swapDetailFeeTitle\":\"CryptoSwap_swapDetailFeeTitle__qHnbL\",\"swapDetailFeeAmount\":\"CryptoSwap_swapDetailFeeAmount__w40uR\",\"approveButton\":\"CryptoSwap_approveButton__QX6Jv\",\"confirmButton\":\"CryptoSwap_confirmButton__27GOs\",\"cancelButton\":\"CryptoSwap_cancelButton__3lb9Z\"};","import numeral from 'numeral';\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getCoinGeckoPrices } from './api';\n\nexport enum SupportedCryptos {\n  USDC = \"USDC\",\n  WBTC = \"WBTC\",\n  ETH = \"ETH\",\n};\n\nexport const CRYPTO_NAMES: { [token: string]: string } = {\n  [SupportedCryptos.USDC]: \"USDC\",\n  [SupportedCryptos.WBTC]: \"Wrapped Bitcoin\",\n  [SupportedCryptos.ETH]: \"Ethereum\",\n};\n\n// TODO: fee should be dynamic but for demo purpose let's set it as constant\nexport const CRYPTO_TXN_FEES: { [token: string]: number } = {\n  [SupportedCryptos.USDC]: 1,\n  [SupportedCryptos.WBTC]: 0.005,\n  [SupportedCryptos.ETH]: 0.005,\n};\n\nexport type CryptoPriceObject = {\n  USD: number,\n  [SupportedCryptos.USDC]: number,\n  [SupportedCryptos.WBTC]: number,\n  [SupportedCryptos.ETH]: number,\n};\n\nexport type CryptoPriceState = {\n  [SupportedCryptos.USDC]: CryptoPriceObject,\n  [SupportedCryptos.WBTC]: CryptoPriceObject,\n  [SupportedCryptos.ETH]: CryptoPriceObject,\n};\n\nconst initialState: CryptoPriceState = {\n  [SupportedCryptos.USDC]: {\n    USD: 0,\n    [SupportedCryptos.USDC]: 1,\n    [SupportedCryptos.WBTC]: 0,\n    [SupportedCryptos.ETH]: 0,\n  },\n  [SupportedCryptos.WBTC]: {\n    USD: 0,\n    [SupportedCryptos.USDC]: 0,\n    [SupportedCryptos.WBTC]: 1,\n    [SupportedCryptos.ETH]: 0,\n  },\n  [SupportedCryptos.ETH]: {\n    USD: 0,\n    [SupportedCryptos.USDC]: 0,\n    [SupportedCryptos.WBTC]: 0,\n    [SupportedCryptos.ETH]: 1,\n  },\n};\n\nexport const getCoinGeckoPricesAsync = createAsyncThunk(\n  'cryptoPrice/getCoinGeckoPrices',\n  getCoinGeckoPrices\n);\n\nexport const cryptoPriceSlice = createSlice({\n  name: 'cryptoPrice',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {},\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(getCoinGeckoPricesAsync.fulfilled, (state, action) => {\n        // the API from CoinGecko doesnt provide price for every pair, so need to calculate through USD price\n        const usd2usdc = numeral(1).divide(action.payload[SupportedCryptos.USDC].usd || 1).value();\n        const usd2wbtc = numeral(1).divide(action.payload[SupportedCryptos.WBTC].usd || 1).value();\n        state[SupportedCryptos.USDC].USD = action.payload[SupportedCryptos.USDC].usd;\n        state[SupportedCryptos.USDC][SupportedCryptos.WBTC] = numeral(action.payload[SupportedCryptos.USDC].usd).multiply(usd2wbtc).value() || 0;\n        state[SupportedCryptos.USDC][SupportedCryptos.ETH] = action.payload[SupportedCryptos.USDC].eth;\n        state[SupportedCryptos.WBTC].USD = action.payload[SupportedCryptos.WBTC].usd;\n        state[SupportedCryptos.WBTC][SupportedCryptos.USDC] = numeral(action.payload[SupportedCryptos.WBTC].usd).multiply(usd2usdc).value() || 0;\n        state[SupportedCryptos.WBTC][SupportedCryptos.ETH] = action.payload[SupportedCryptos.WBTC].eth;\n        state[SupportedCryptos.ETH].USD = action.payload[SupportedCryptos.ETH].usd;\n        state[SupportedCryptos.ETH][SupportedCryptos.USDC] = numeral(action.payload[SupportedCryptos.ETH].usd).multiply(usd2usdc).value() || 0;\n        state[SupportedCryptos.ETH][SupportedCryptos.WBTC] = numeral(action.payload[SupportedCryptos.ETH].usd).multiply(usd2wbtc).value() || 0;\n      });\n  },\n});\n\nexport default cryptoPriceSlice.reducer;\n","import { SupportedCryptos } from \"./slice\";\n\nexport type GeckoPriceObject = {\n  usd: number,\n  btc: number,\n  eth: number,\n};\n\nconst DEFAULT_PRICE_OBJECT: GeckoPriceObject = {\n  usd: 0,\n  btc: 0,\n  eth: 0,\n};\n\ntype GeckoPriceResponse = {\n  \"ethereum\": GeckoPriceObject,\n  \"usd-coin\": GeckoPriceObject,\n  \"wrapped-bitcoin\": GeckoPriceObject,\n};\n\nexport const getCoinGeckoPrices = async (): Promise<{ [key in SupportedCryptos]: GeckoPriceObject }> => {\n  const ids = [\"bitcoin\", \"wrapped-bitcoin\", \"ethereum\", \"usd-coin\"];\n  const vss = [\"usd\", \"btc\", \"eth\"];\n  const api = `https://api.coingecko.com/api/v3/simple/price?ids=${ids.join(\",\")}&vs_currencies=${vss.join(\",\")}`;\n  const response = await fetch(api, { cache: \"no-cache\" });\n  const priceData = (await response.json()) as GeckoPriceResponse;\n  return {\n    USDC: priceData[\"usd-coin\"] ?? DEFAULT_PRICE_OBJECT,\n    WBTC: priceData[\"wrapped-bitcoin\"] ?? DEFAULT_PRICE_OBJECT,\n    ETH: priceData[\"ethereum\"] ?? DEFAULT_PRICE_OBJECT,\n  }\n};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SupportedCryptos } from '../cryptoPrice/slice';\n\nexport enum SwapStatus {\n  INITIAL = \"INITIAL\",\n  REVIEW = \"REVIEW\",\n  APPROVING = \"APPROVING\",\n  APPROVED = \"APPROVED\",\n  CONFIRMING = \"CONFIRMING\",\n};\n\nexport type SwapUIState = {\n  status: SwapStatus,\n  fromCrypto: SupportedCryptos,\n  fromAmount: string,\n  toCrypto: SupportedCryptos,\n};\n\nconst initialState: SwapUIState = {\n  status: SwapStatus.INITIAL,\n  fromCrypto: SupportedCryptos.USDC,\n  fromAmount: \"\",\n  toCrypto: SupportedCryptos.USDC,\n};\n\nexport const swapUISlice = createSlice({\n  name: 'swapUI',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    reset: (state) => initialState,\n    setStatus: (state, action: PayloadAction<SwapStatus>) => {\n      state.status = action.payload;\n    },\n    setFromCrypto: (state, action: PayloadAction<SupportedCryptos>) => {\n      state.fromCrypto = action.payload;\n    },\n    setFromAmount: (state, action: PayloadAction<string>) => {\n      state.fromAmount = action.payload;\n    },\n    setToCrypto: (state, action: PayloadAction<SupportedCryptos>) => {\n      state.toCrypto = action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => builder,\n});\n\nexport const { reset, setStatus, setFromCrypto, setFromAmount, setToCrypto } = swapUISlice.actions;\n\nexport default swapUISlice.reducer;\n","import { ethers } from 'ethers';\n\nexport const initWallet = async (): Promise<string> => {\n  try {\n    const win: any = window;\n    const ethProvider = new ethers.providers.Web3Provider(win.ethereum);\n    const signer = ethProvider.getSigner();\n    return await signer.getAddress();\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const connectWallet = async (): Promise<string> => {\n  try {\n    const win: any = window;\n    const ethProvider = new ethers.providers.Web3Provider(win.ethereum);\n    await ethProvider.send(\"eth_requestAccounts\", []);\n    const signer = ethProvider.getSigner();\n    return await signer.getAddress();\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n};","import numeral from 'numeral';\n\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SupportedCryptos } from '../cryptoPrice/slice';\nimport { connectWallet, initWallet } from './api';\n\nexport type WalletBalances = {\n  [SupportedCryptos.USDC]: number,\n  [SupportedCryptos.WBTC]: number,\n  [SupportedCryptos.ETH]: number,\n};\n\nexport type WalletState = {\n  connectedAddress?: string,\n  balances: WalletBalances,\n};\n\nconst initialState: WalletState = {\n  connectedAddress: undefined,\n  balances: {\n    [SupportedCryptos.USDC]: 100000,\n    [SupportedCryptos.WBTC]: 1.2568,\n    [SupportedCryptos.ETH]: 21.501,\n  }\n};\n\nexport const initWalletAsync = createAsyncThunk(\n  'wallet/initWallet',\n  initWallet\n);\n\nexport const connectWalletAsync = createAsyncThunk(\n  'wallet/connectWallet',\n  connectWallet\n);\n\nexport const walletSlice = createSlice({\n  name: 'wallet',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    doSwap: (state, action: PayloadAction<{ fromCrypto: SupportedCryptos, fromAmount: number, toCrypto: SupportedCryptos, toAmount: number }>) => {\n      const { fromCrypto, fromAmount, toCrypto, toAmount } = action.payload;\n      state.balances[fromCrypto] = numeral(state.balances[fromCrypto]).subtract(fromAmount).value() || 0;\n      state.balances[toCrypto] = numeral(state.balances[toCrypto]).add(toAmount).value() || 0;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(initWalletAsync.fulfilled, (state, action) => {\n        state.connectedAddress = action.payload;\n      })\n      .addCase(initWalletAsync.rejected, (state, action) => {\n        state.connectedAddress = undefined;\n      })\n      .addCase(connectWalletAsync.fulfilled, (state, action) => {\n        state.connectedAddress = action.payload;\n      })\n      .addCase(connectWalletAsync.rejected, (state, action) => {\n        state.connectedAddress = undefined;\n      });\n  },\n});\n\nexport const { doSwap } = walletSlice.actions;\n\nexport default walletSlice.reducer;\n","import { configureStore, ThunkAction, Action, combineReducers } from '@reduxjs/toolkit';\nimport { createBrowserHistory } from 'history';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\n\nimport walletReducer from '../features/wallet/slice';\nimport priceReducer from '../features/cryptoPrice/slice';\nimport swapUIReducer from '../features/swapUI/slice';\n\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\nexport const rootReducer = combineReducers({\n  router: connectRouter(history),\n  price: priceReducer,\n  wallet: walletReducer,\n  swapUI: swapUIReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export default __webpack_public_path__ + \"static/media/metamask.9f907648.svg\";","import React, { useCallback } from 'react';\nimport { Redirect } from 'react-router';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { connectWalletAsync } from '../../features/wallet/slice';\n\nimport styles from './index.module.scss';\nimport metamaskSVG from './metamask.svg';\n\nconst ConnectWalletPage = () => {\n  const dispatch = useAppDispatch();\n  const connectedAddress = useAppSelector((state) => state.wallet.connectedAddress);\n  const onBtnClick = useCallback(() => dispatch(connectWalletAsync()), [dispatch]);\n\n  if (!!connectedAddress) {\n    return <Redirect to=\"/swap\" />;\n  }\n\n  return (\n    <div className={styles.connectWalletPage}>\n      <span className={styles.connectWalletText}>Connect account</span>\n      <button className={styles.connectWalletButton} onClick={onBtnClick}>\n        <span className={styles.icon}>\n          <img src={metamaskSVG} alt=\"Metamask Logo\" />\n        </span>\n        <span className={styles.text}>Metamask</span>\n        <span className={styles.spacer}></span>\n      </button>\n    </div>\n  );\n}\n\nexport default ConnectWalletPage;","import numeral from \"numeral\";\n\nimport React, { useCallback } from 'react';\nimport { CryptoPriceState, CRYPTO_NAMES, SupportedCryptos } from '../../features/cryptoPrice/slice';\nimport { SwapStatus } from \"../../features/swapUI/slice\";\nimport { WalletBalances } from \"../../features/wallet/slice\";\n\nimport styles from './index.module.scss';\n\nexport type CryptoBalancesProps = React.HTMLAttributes<HTMLElement> & {\n  prices: CryptoPriceState,\n  balances: WalletBalances,\n  status: SwapStatus,\n  onSelectCrypto: (crypto: SupportedCryptos) => void,\n};\n\ntype BalanceListItemProps = {\n  crypto: string,\n  balance: number,\n  price: number,\n  canSelect: boolean,\n  onSelect: () => void,\n};\n\nconst BalanceListItem = (props: BalanceListItemProps) => (\n  <li className={styles.cryptoListItem}>\n    <div className={styles.cryptoNameContainer}>\n      <div className={`${styles.cryptoIcon} ${styles[\"crypto\" + props.crypto]}`}></div>\n      <div className={styles.cryptoName}>\n        <span className={styles.cryptoNameTitle}>{props.crypto}</span>\n        <span className={styles.cryptoNameDesc}>{CRYPTO_NAMES[props.crypto]}</span>\n      </div>\n    </div>\n    <div className={styles.cryptoBalanceContainer}>\n      <div className={styles.cryptoBalance}>\n        <span className={styles.cryptoValue}>{numeral(props.balance).multiply(props.price).format(\"$0,0.00\")}</span>\n        <span className={styles.cryptoAmount}>{numeral(props.balance).format(\"0,0.00[000000]\")}</span>\n      </div>\n      <button className={styles.rightArrow} onClick={props.onSelect} disabled={!props.canSelect}></button>\n    </div>\n  </li>\n);\n\nconst CryptoBalances = (props: CryptoBalancesProps) => {\n  const { prices, balances, status, onSelectCrypto } = props;\n\n  const selectUSDC = useCallback(() => onSelectCrypto(SupportedCryptos.USDC), [onSelectCrypto]);\n  const selectWBTC = useCallback(() => onSelectCrypto(SupportedCryptos.WBTC), [onSelectCrypto]);\n  const selectETH = useCallback(() => onSelectCrypto(SupportedCryptos.ETH), [onSelectCrypto]);\n\n  return (\n    <div className={`${props.className ?? \"\"} ${styles.cryptoBalances}`}>\n      <div className={styles.balanceContainer}>\n        <span className={styles.balanceTitle}>My funds</span>\n        <ul className={styles.cryptoList}>\n          <BalanceListItem\n            crypto={SupportedCryptos.USDC}\n            balance={balances[SupportedCryptos.USDC]}\n            price={prices[SupportedCryptos.USDC].USD}\n            canSelect={status === SwapStatus.INITIAL}\n            onSelect={selectUSDC} />\n          <BalanceListItem\n            crypto={SupportedCryptos.WBTC}\n            balance={balances[SupportedCryptos.WBTC]}\n            price={prices[SupportedCryptos.WBTC].USD}\n            canSelect={status === SwapStatus.INITIAL}\n            onSelect={selectWBTC} />\n          <BalanceListItem\n            crypto={SupportedCryptos.ETH}\n            balance={balances[SupportedCryptos.ETH]}\n            price={prices[SupportedCryptos.ETH].USD}\n            canSelect={status === SwapStatus.INITIAL}\n            onSelect={selectETH} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default CryptoBalances;","import numeral from \"numeral\";\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { CryptoPriceState, CRYPTO_NAMES, SupportedCryptos } from \"../../features/cryptoPrice/slice\";\nimport { WalletBalances } from \"../../features/wallet/slice\";\n\nimport styles from './index.module.scss';\n\ntype CryptSelectListItemProps = {\n  crypto: SupportedCryptos,\n  price: number,\n  balance: number,\n  onSelect: (crypto: SupportedCryptos) => void,\n};\n\nconst CryptoSelectListItem = (props: CryptSelectListItemProps) => {\n  const { crypto, price, balance, onSelect } = props;\n  const [cryptoValue, setCryptoValue] = useState(\"\");\n  const onClickListItem = useCallback(() => onSelect(crypto), [crypto, onSelect]);\n\n  useEffect(() => setCryptoValue(numeral(price).multiply(balance).format(\"$0,0.00[000000]\")), [price, balance]);\n\n  return (\n    <li className={styles.cryptoSelectListItem} onClick={onClickListItem}>\n      <div className={styles.cryptoSelectListItemCryptoContainer}>\n        <div className={`${styles.cryptoSelectListItemCryptoIcon} ${styles[\"crypto\" + crypto]}`}></div>\n        <div className={styles.cryptoSelectListItemCryptoNameContainer}>\n          <span className={styles.cryptoSelectListItemCryptoName}>{crypto}</span>\n          <span className={styles.cryptoSelectListItemCryptoDesc}>{CRYPTO_NAMES[crypto]}</span>\n        </div>\n      </div>\n      <div className={styles.cryptoSelectListItemBalanceContainer}>\n        <span className={styles.cryptoSelectListItemValue}>{cryptoValue}</span>\n        <span className={styles.cryptoSelectListItemBalance}>{balance}</span>\n      </div>\n    </li>\n  )\n};\n\nexport type CryptoSelectModalProps = React.HTMLAttributes<HTMLElement> & {\n  isOpen: boolean,\n  title: string,\n  prices: CryptoPriceState,\n  balances: WalletBalances,\n  onClose: () => void,\n  onSelectListItem: (crypto: SupportedCryptos) => void,\n};\n\nconst CryptoSelectModal = (props: CryptoSelectModalProps) => props.isOpen ? (\n  <div className={`${props.className ?? \"\"} ${styles.cryptoSelectModal}`}>\n    <div className={styles.modalOverlay} onClick={props.onClose}></div>\n    <div className={styles.cryptoSelectModalBody}>\n      <span className={styles.cryptoSelectModalTitle}>{props.title}</span>\n      <button className={styles.upArrow} onClick={props.onClose}></button>\n      <ul className={styles.cryptoSelectList}>\n        <CryptoSelectListItem\n          crypto={SupportedCryptos.USDC}\n          price={props.prices[SupportedCryptos.USDC].USD}\n          balance={props.balances[SupportedCryptos.USDC]}\n          onSelect={props.onSelectListItem} />\n        <CryptoSelectListItem\n          crypto={SupportedCryptos.WBTC}\n          price={props.prices[SupportedCryptos.WBTC].USD}\n          balance={props.balances[SupportedCryptos.WBTC]}\n          onSelect={props.onSelectListItem} />\n        <CryptoSelectListItem\n          crypto={SupportedCryptos.ETH}\n          price={props.prices[SupportedCryptos.ETH].USD}\n          balance={props.balances[SupportedCryptos.ETH]}\n          onSelect={props.onSelectListItem} />\n      </ul>\n    </div>\n  </div>\n) : null;\n\nexport default CryptoSelectModal;","import numeral from \"numeral\";\n\nimport React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport { CryptoPriceState, SupportedCryptos } from \"../../features/cryptoPrice/slice\";\nimport { SwapStatus, SwapUIState } from \"../../features/swapUI/slice\";\nimport { WalletBalances } from \"../../features/wallet/slice\";\nimport CryptoSelectModal from \"./CryptoSelectModal\";\n\nimport styles from './index.module.scss';\n\nexport type CryptoSwapInitialProps = {\n  prices: CryptoPriceState,\n  balances: WalletBalances,\n  uiState: SwapUIState,\n  onChangeSwapStatus: (status: SwapStatus) => void,\n  onChangeFromCrypto: (crypto: SupportedCryptos) => void,\n  onChangeFromAmount: (amount: string) => void,\n  onChangeToCrypto: (crypto: SupportedCryptos) => void,\n};\n\nconst CryptoSwapInitial = (props: any) => {\n  const { prices, balances, uiState, onChangeSwapStatus, onChangeFromCrypto, onChangeFromAmount, onChangeToCrypto } = props;\n  const [fromBalance, setFromBalance] = useState(\"\");\n  const [toBalance, setToBalance] = useState(\"\");\n  const [toAmount, setToAmount] = useState(\"\");\n  const [disableReview, setDisableReview] = useState(true);\n  const [fromCryptoSelectOpen, setFromCryptoSelectOpen] = useState(false);\n  const [toCryptoSelectOpen, setToCryptoSelectOpen] = useState(false);\n\n  // get use of useEffect and useState such that no need to call in every re-render\n  useEffect(() => {\n    if ((numeral(uiState.fromAmount).value() || 0) > 0) {\n      const amount = numeral(uiState.fromAmount).multiply(prices[uiState.fromCrypto][uiState.toCrypto]);\n      setToAmount(amount.format(\"0.00[000000]\"));\n    } else {\n      setToAmount(\"\");\n    }\n  }, [prices, uiState, setToAmount]);\n  useEffect(() => setDisableReview((numeral(uiState.fromAmount).value() || 0) === 0 || uiState.fromCrypto === uiState.toCrypto), [uiState]);\n  useEffect(() => setFromBalance(numeral(balances[uiState.fromCrypto]).format(\"0,0.00[000000]\")), [balances, uiState.fromCrypto]);\n  useEffect(() => setToBalance(numeral(balances[uiState.toCrypto]).format(\"0,0.00[000000]\")), [balances, uiState.toCrypto]);\n\n  const onClickMaxButton = useCallback(() => onChangeFromAmount(`${balances[uiState.fromCrypto]}`), [balances, uiState.fromCrypto, onChangeFromAmount]);\n  const onClickReviewButton = useCallback(() => onChangeSwapStatus(SwapStatus.REVIEW), [onChangeSwapStatus]);\n  const onChangeFromAmountInput = useCallback((ev: ChangeEvent<HTMLInputElement>) => {\n    if (!ev.target.validity.patternMismatch) {\n      const str = ev.target.value;\n      const amount = numeral(str).value() || 0;\n      if (amount > balances[uiState.fromCrypto]) {\n        onChangeFromAmount(`${balances[uiState.fromCrypto]}`);\n      } else if (amount <= 0) {\n        onChangeFromAmount(\"\");\n      } else {\n        onChangeFromAmount(str);\n      }\n    }\n  }, [balances, uiState.fromCrypto, onChangeFromAmount]);\n  const onSelectFromCrypto = useCallback((crypto: SupportedCryptos) => {\n    onChangeFromCrypto(crypto);\n    onChangeFromAmount(\"\");\n    setFromCryptoSelectOpen(false);\n  }, [onChangeFromCrypto, onChangeFromAmount]);\n  const onSelectToCrypto = useCallback((crypto: SupportedCryptos) => {\n    onChangeToCrypto(crypto);\n    setToCryptoSelectOpen(false);\n  }, [onChangeToCrypto]);\n  const openFromCryptoSelectModal = useCallback(() => {\n    setFromCryptoSelectOpen(true);\n    setToCryptoSelectOpen(false);\n  }, []);\n  const closeFromCryptoSelectModal = useCallback(() => setFromCryptoSelectOpen(false), []);\n  const openToCryptoSelectModal = useCallback(() => {\n    setFromCryptoSelectOpen(false);\n    setToCryptoSelectOpen(true);\n  }, []);\n  const closeToCryptoSelectModal = useCallback(() => setToCryptoSelectOpen(false), []);\n\n  return (\n    <div className={styles.swapBody}>\n      <div className={`${styles.swapInnerBody} ${(fromCryptoSelectOpen || toCryptoSelectOpen) ? styles.swapCryptoSelectOpen : \"\"}`}>\n        <div className={styles.swapFromContainer}>\n          <span className={styles.swapFromText}>From</span>\n          <span className={styles.swapFromBalance}>Balance: {fromBalance}</span>\n          <input\n            className={styles.swapFromAmount}\n            pattern=\"[0-9]*[.]?[0-9]*\"\n            placeholder=\"0.00\"\n            value={uiState.fromAmount}\n            onChange={onChangeFromAmountInput} />\n          <button className={styles.maxButton} onClick={onClickMaxButton}>MAX</button>\n          <div className={styles.swapFromCryptoSelector}>\n            <span className={styles.swapFromCryptoName}>{uiState.fromCrypto}</span>\n            <div className={`${styles.swapFromCryptoIcon} ${styles[\"crypto\" + uiState.fromCrypto]}`}></div>\n            <button className={styles.downArrow} onClick={openFromCryptoSelectModal}></button>\n          </div>\n        </div>\n        <div className={styles.toArrow}></div>\n        <div className={styles.swapToContainer}>\n          <span className={styles.swapToText}>To</span>\n          <span className={styles.swapToBalance}>Balance: {toBalance}</span>\n          <input\n            className={styles.swapToAmount}\n            tabIndex={-1}\n            placeholder=\"0.00\"\n            readOnly\n            value={toAmount} />\n          <div className={styles.swapToCryptoSelector}>\n            <span className={styles.swapToCryptoName}>{uiState.toCrypto}</span>\n            <div className={`${styles.swapToCryptoIcon} ${styles[\"crypto\" + uiState.toCrypto]}`}></div>\n            <button className={styles.downArrow} onClick={openToCryptoSelectModal}></button>\n          </div>\n        </div>\n      </div>\n      <CryptoSelectModal\n        className={styles.swapFromCryptoSelectModal}\n        isOpen={fromCryptoSelectOpen}\n        title=\"From\"\n        prices={prices}\n        balances={balances}\n        onClose={closeFromCryptoSelectModal}\n        onSelectListItem={onSelectFromCrypto} />\n      <CryptoSelectModal\n        className={styles.swapToCryptoSelectModal}\n        isOpen={toCryptoSelectOpen}\n        title=\"To\"\n        prices={prices}\n        balances={balances}\n        onClose={closeToCryptoSelectModal}\n        onSelectListItem={onSelectToCrypto} />\n      <button className={styles.reviewButton} disabled={disableReview} onClick={onClickReviewButton}>Review</button>\n    </div>\n  );\n};\n\nexport default CryptoSwapInitial;","import numeral from \"numeral\";\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { CryptoPriceState, CRYPTO_TXN_FEES } from \"../../features/cryptoPrice/slice\";\nimport { SwapStatus, SwapUIState } from \"../../features/swapUI/slice\";\n\nimport styles from './index.module.scss';\n\nexport type CryptoSwapReviewProps = {\n  prices: CryptoPriceState,\n  uiState: SwapUIState,\n  onChangeSwapStatus: (status: SwapStatus) => void,\n  onSwap: () => void,\n};\n\nconst CryptoSwapApprove = (props: any) => {\n  const { prices, uiState, onChangeSwapStatus, onSwap } = props;\n  const [fromAmount, setFromAmount] = useState(\"\");\n  const [toAmount, setToAmount] = useState(\"\");\n  const [receivedAmount, setReceivedAmount] = useState(\"\");\n  const [feeAmount, setFeeAmount] = useState(\"\");\n  const [ellipsis, setEllipsis] = useState(\"\");\n\n  // get use of useEffect and useState such that no need to call in every re-render\n  useEffect(() => setFromAmount(numeral(uiState.fromAmount).format(\"0,0.00[000000]\")), [uiState.fromAmount]);\n  useEffect(() => {\n    if ((numeral(uiState.fromAmount).value() || 0) > 0) {\n      const amount = numeral(uiState.fromAmount).multiply(prices[uiState.fromCrypto][uiState.toCrypto]);\n      setToAmount(amount.format(\"0.00[000000]\"));\n      setReceivedAmount(amount.subtract(CRYPTO_TXN_FEES[uiState.toCrypto]).format(\"0.00[000000]\"));\n    } else {\n      setToAmount(\"0.00\");\n      setReceivedAmount(\"0.00\");\n    }\n  }, [prices, uiState.fromAmount, uiState.fromCrypto, uiState.toCrypto, setToAmount]);\n  useEffect(() => setFeeAmount(numeral(CRYPTO_TXN_FEES[uiState.toCrypto]).format(\"0,0.00[000000]\")), [uiState.toCrypto]);\n\n  const onClickApproveButton = useCallback(() => {\n    onChangeSwapStatus(SwapStatus.APPROVING);\n    setTimeout(() => onChangeSwapStatus(SwapStatus.APPROVED), 2000);\n  }, [onChangeSwapStatus]);\n  const onClickConfirmButton = useCallback(() => {\n    onChangeSwapStatus(SwapStatus.CONFIRMING);\n    setTimeout(onSwap, 2000);\n  }, [onChangeSwapStatus, onSwap]);\n  const onClickCancelButton = useCallback(() => onChangeSwapStatus(SwapStatus.INITIAL), [onChangeSwapStatus]);\n\n  if (uiState.status === SwapStatus.APPROVING || uiState.status === SwapStatus.CONFIRMING) {\n    setTimeout(() => setEllipsis(ellipsis.length >= 3 ? \"\" : (ellipsis + \".\")), 300);\n  }\n\n  return (\n    <div className={styles.swapBody}>\n      <div className={styles.swapInnerBody}>\n        <div className={styles.swapFromCryptoContainer}>\n          <div className={styles.swapFromCryptoAmountContainer}>\n            <div className={`${styles.swapFromCryptoIcon} ${styles[\"crypto\" + uiState.fromCrypto]}`}></div>\n            <span className={styles.swapFromCryptoAmount}>{fromAmount}</span>\n          </div>\n          <span className={styles.swapFromCryptoName}>{uiState.fromCrypto}</span>\n        </div>\n        <div className={styles.toArrow}></div>\n        <div className={styles.swapToCryptoContainer}>\n          <div className={styles.swapToCryptoAmountContainer}>\n            <div className={`${styles.swapToCryptoIcon} ${styles[\"crypto\" + uiState.toCrypto]}`}></div>\n            <span className={styles.swapToCryptoAmount}>{toAmount}</span>\n          </div>\n          <span className={styles.swapToCryptoName}>{uiState.toCrypto}</span>\n        </div>\n        <span className={styles.swapDetailTitle}>Details</span>\n        <div className={styles.swapDetailContainer}>\n          <div className={styles.swapDetailReceivedContainer}>\n            <span className={styles.swapDetailReceivedTitle}>Minimum recieved</span>\n            <span className={styles.swapDetailReceivedAmount}>{receivedAmount} {uiState.toCrypto}</span>\n          </div>\n          <div className={styles.swapDetailFeeContainer}>\n            <span className={styles.swapDetailFeeTitle}>Network & Protocol fees</span>\n            <span className={styles.swapDetailFeeAmount}>{feeAmount} {uiState.toCrypto}</span>\n          </div>\n        </div>\n      </div>\n      {uiState.status === SwapStatus.REVIEW && <button className={styles.approveButton} onClick={onClickApproveButton}>Approve Swap</button>}\n      {uiState.status === SwapStatus.APPROVING && <button className={styles.approveButton} disabled>Approve in wallet{ellipsis}</button>}\n      {uiState.status === SwapStatus.APPROVED && <button className={styles.confirmButton} onClick={onClickConfirmButton}>Confirm Swap</button>}\n      {uiState.status === SwapStatus.CONFIRMING && <button className={styles.confirmButton} disabled>Confirm in wallet{ellipsis}</button>}\n      <button className={styles.cancelButton} onClick={onClickCancelButton}>Cancel</button>\n    </div>\n  );\n};\n\nexport default CryptoSwapApprove;","import React, { useCallback, useEffect, useState } from 'react';\nimport { CryptoPriceState, SupportedCryptos } from \"../../features/cryptoPrice/slice\";\nimport { SwapStatus, SwapUIState } from \"../../features/swapUI/slice\";\nimport { WalletBalances } from \"../../features/wallet/slice\";\nimport CryptoSwapInitial from \"./CryptoSwapInitial\";\nimport CryptoSwapApprove from \"./CryptoSwapApprove\";\n\nimport styles from './index.module.scss';\n\nexport type CryptoSwapProps = React.HTMLAttributes<HTMLElement> & {\n  prices: CryptoPriceState,\n  balances: WalletBalances,\n  uiState: SwapUIState,\n  onChangeSwapStatus: (status: SwapStatus) => void,\n  onChangeFromCrypto: (crypto: SupportedCryptos) => void,\n  onChangeFromAmount: (amount: string) => void,\n  onChangeToCrypto: (crypto: SupportedCryptos) => void,\n  onSwap: () => void,\n};\n\nconst CryptoSwap = (props: CryptoSwapProps) => {\n  const { prices, balances, uiState, onChangeSwapStatus, onChangeFromCrypto, onChangeFromAmount, onChangeToCrypto, onSwap } = props;\n  const [title, setTitle] = useState(\"\");\n\n  // get use of useEffect and useState such that no need to call in every re-render\n  useEffect(() => {\n    switch (uiState.status) {\n      case SwapStatus.INITIAL:\n        setTitle(\"Swap\");\n        break;\n      case SwapStatus.REVIEW:\n      case SwapStatus.APPROVING:\n        setTitle(\"Approve Swap\");\n        break;\n\n      case SwapStatus.APPROVED:\n      case SwapStatus.CONFIRMING:\n        setTitle(\"Confirm Swap\");\n        break;\n    }\n  }, [uiState.status]);\n\n  const onClickCloseButton = useCallback(() => onChangeSwapStatus(SwapStatus.INITIAL), [onChangeSwapStatus]);\n\n  return (\n    <div className={`${props.className ?? \"\"} ${styles.cryptoSwap} ${styles[\"status\" + uiState.status]}`}>\n      <div className={styles.swapHeader}>\n        <span className={styles.swapTitle}>{title}</span>\n        {uiState.status !== SwapStatus.INITIAL && <button className={styles.closeButton} onClick={onClickCloseButton}></button>}\n      </div>\n      <div className={`${styles.swapBodyContainer} ${styles[\"status\" + uiState.status]}`}>\n        {uiState.status === SwapStatus.INITIAL && (\n          <CryptoSwapInitial\n            balances={balances}\n            prices={prices}\n            uiState={uiState}\n            onChangeSwapStatus={onChangeSwapStatus}\n            onChangeFromCrypto={onChangeFromCrypto}\n            onChangeFromAmount={onChangeFromAmount}\n            onChangeToCrypto={onChangeToCrypto} />\n        )}\n        {uiState.status !== SwapStatus.INITIAL && (\n          <CryptoSwapApprove\n            balances={balances}\n            prices={prices}\n            uiState={uiState}\n            onChangeSwapStatus={onChangeSwapStatus}\n            onSwap={onSwap} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CryptoSwap;","import numeral from 'numeral';\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getCoinGeckoPricesAsync, SupportedCryptos } from '../../features/cryptoPrice/slice';\nimport { reset, setFromAmount, setFromCrypto, setStatus, setToCrypto, SwapStatus } from '../../features/swapUI/slice';\nimport { doSwap } from '../../features/wallet/slice';\nimport CryptoBalances from '../../components/CryptoBalances';\nimport CryptoSwap from '../../components/CryptoSwap';\n\nimport styles from './index.module.scss';\n\nconst SwapPage = () => {\n  const dispatch = useAppDispatch();\n  const connectedAddress = useAppSelector((state) => state.wallet.connectedAddress);\n  const balances = useAppSelector((state) => state.wallet.balances);\n  const prices = useAppSelector((state) => state.price);\n  const swapUI = useAppSelector((state) => state.swapUI);\n\n  const getPrices = useCallback(() => dispatch(getCoinGeckoPricesAsync()), [dispatch]);\n  const onChangeSwapStatus = useCallback((status: SwapStatus) => dispatch(setStatus(status)), [dispatch]);\n  const onChangeFromCrypto = useCallback((crypto: SupportedCryptos) => dispatch(setFromCrypto(crypto)), [dispatch]);\n  const onChangeFromAmount = useCallback((amount: string) => dispatch(setFromAmount(amount)), [dispatch]);\n  const onChangeToCrypto = useCallback((crypto: SupportedCryptos) => dispatch(setToCrypto(crypto)), [dispatch]);\n  const onSelectCrypto = useCallback((crypto: SupportedCryptos) => {\n    dispatch(setFromCrypto(crypto));\n    dispatch(setFromAmount(\"\"));\n  }, [dispatch]);\n  const onSwap = useCallback(() => {\n    const { fromCrypto, fromAmount, toCrypto } = swapUI;\n    const toAmount = numeral(fromAmount).multiply(prices[fromCrypto][toCrypto]).value() || 0;\n    dispatch(doSwap({ fromCrypto, fromAmount: numeral(fromAmount).value() || 0, toCrypto, toAmount }));\n    dispatch(reset());\n  }, [dispatch, prices, swapUI]);\n  \n  useEffect(() => {\n    if (connectedAddress) {\n      getPrices();\n      const id = setInterval(getPrices, 30000);\n      return () => clearInterval(id);\n    }\n  }, [connectedAddress, getPrices]);\n\n  if (!connectedAddress) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className={styles.swapPage}>\n      <div className={styles.innerContainer}>\n        <CryptoBalances\n          className={styles.cryptoBalances}\n          balances={balances}\n          prices={prices}\n          status={swapUI.status}\n          onSelectCrypto={onSelectCrypto} />\n        <CryptoSwap\n          className={styles.cryptoSwap}\n          balances={balances}\n          prices={prices}\n          uiState={swapUI}\n          onChangeSwapStatus={onChangeSwapStatus}\n          onChangeFromCrypto={onChangeFromCrypto}\n          onChangeFromAmount={onChangeFromAmount}\n          onChangeToCrypto={onChangeToCrypto}\n          onSwap={onSwap} />\n      </div>\n    </div>\n  );\n}\n\nexport default SwapPage;\n","import React, { useEffect } from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch } from 'react-router';\n\nimport { history } from './app/store';\nimport { useAppDispatch } from './app/hooks';\nimport { initWalletAsync } from './features/wallet/slice';\nimport ConnectWalletPage from './pages/ConnectWalletPage';\nimport SwapPage from './pages/SwapPage';\n\nimport \"@fontsource/inter\";\n\nconst App = () => {\n  const dispatch = useAppDispatch();\n  \n  useEffect(() => {\n    dispatch(initWalletAsync());\n  }, [dispatch]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path=\"/swap\" render={() => <SwapPage />} />\n        <Route path=\"/\" render={() => <ConnectWalletPage />} />\n      </Switch>\n    </ConnectedRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}